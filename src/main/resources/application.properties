spring.application.name=StackOverflow

spring.datasource.url=jdbc:postgresql://dpg-d083lp49c44c73bg6a80-a.singapore-postgres.render.com/stackdb_d9vc
spring.datasource.username=root
spring.datasource.password=FlBjFBDRNtmlsEw0qRcB4jR9XcR1Wwti

#spring.datasource.url=jdbc:postgresql://${POSTGRES_HOST:localhost}:${POSTGRES_PORT:5432}/${POSTGRES_DB:stackoverflowclone}
#spring.datasource.username=${POSTGRES_USERNAME:postgres}
#spring.datasource.password=${POSTGRES_PASSWORD:hello1234}

cloudinary.cloud_name=dywwi6xxp
cloudinary.api_key=582756954882249
cloudinary.api_secret=j_GHN_YpRTQvpA15pHh0xc6oYMA


spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.jpa.hibernate.ddl-auto=update
#
#logging.level.root=warn

#server.port=3001

# Google OAuth2 Client Registration
spring.security.oauth2.client.registration.google.client-id=105088651073-tpfersi4m8ii5ahm9uk2s3fpgvq193gu.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.provider.google.user-name-attribute=email
# (Optional) customize the redirect URI if you need:
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}

# Google OAuth2 Provider Details
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
#spring.security.oauth2.client.provider.google.user-name-attribute=sub

# (Optional) Default login page settings
# server.servlet.session.timeout=30m
# logging.level.org.springframework.security=DEBUG
